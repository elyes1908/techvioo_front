{
    "className": "org.joget.apps.form.model.Form",
    "elements": [{
        "className": "org.joget.apps.form.model.Section",
        "elements": [{
            "className": "org.joget.apps.form.model.Column",
            "elements": [
                {
                    "className": "org.joget.apps.form.lib.TextField",
                    "properties": {
                        "id": "res",
                        "label": "nb_result",
                        "maxlength": "",
                        "placeholder": "",
                        "readonly": "",
                        "readonlyLabel": "",
                        "size": "",
                        "storeNumeric": "",
                        "style": "",
                        "validator": {
                            "className": "",
                            "properties": {}
                        },
                        "value": "",
                        "workflowVariable": ""
                    }
                },
                {
                    "className": "org.joget.apps.form.lib.TextField",
                    "properties": {
                        "id": "company_size",
                        "label": "company_size",
                        "maxlength": "",
                        "placeholder": "",
                        "readonly": "",
                        "readonlyLabel": "",
                        "size": "",
                        "storeNumeric": "",
                        "style": "",
                        "validator": {
                            "className": "",
                            "properties": {}
                        },
                        "value": "",
                        "workflowVariable": ""
                    }
                },
                {
                    "className": "org.joget.apps.form.lib.TextField",
                    "properties": {
                        "id": "result",
                        "label": "result",
                        "maxlength": "",
                        "placeholder": "",
                        "readonly": "",
                        "readonlyLabel": "",
                        "size": "",
                        "storeNumeric": "",
                        "style": "",
                        "validator": {
                            "className": "",
                            "properties": {}
                        },
                        "value": "",
                        "workflowVariable": ""
                    }
                },
                {
                    "className": "org.joget.apps.form.lib.CustomHTML",
                    "properties": {
                        "autoPopulate": "",
                        "id": "test",
                        "label": "",
                        "value": "<!DOCTYPE html>\r\n<html>\r\n<head>\r\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.1/jquery.min.js\"><\/script>\r\n<script>\r\n$(document).ready(function(){\r\n  i = 0;\r\n   $('#save_value').click(function () {\r\n       var arr = [];\r\n       $('.ads_Checkbox:checked').each(function () {\r\n           arr[i++] = $(this).val();\r\n       });\r\n       console.log(arr);\r\n   });\r\n});\r\n<\/script>\r\n<\/head>\r\n<body>\r\n<input id=\"ad_Checkbox1\" class=\"ads_Checkbox\" type=\"checkbox\" value=\"1\" />\r\n<input id=\"ad_Checkbox2\" class=\"ads_Checkbox\" type=\"checkbox\" value=\"2\" />\r\n<input id=\"ad_Checkbox3\" class=\"ads_Checkbox\" type=\"checkbox\" value=\"3\" />\r\n<input id=\"ad_Checkbox4\" class=\"ads_Checkbox\" type=\"checkbox\" value=\"4\" />\r\n<input type=\"button\" id=\"save_value\" name=\"save_value\" value=\"Save\" />\r\n\r\n<\/body>\r\n<\/html>\r\n"
                    }
                }
            ],
            "properties": {"width": "100%"}
        }],
        "properties": {
            "id": "section1",
            "label": "Section"
        }
    }],
    "properties": {
        "description": "",
        "id": "test",
        "loadBinder": {
            "className": "org.joget.apps.form.lib.WorkflowFormBinder",
            "properties": {}
        },
        "name": "test",
        "noPermissionMessage": "",
        "permission": {
            "className": "",
            "properties": {}
        },
        "postProcessor": {
            "className": "",
            "properties": {}
        },
        "postProcessorRunOn": "both",
        "storeBinder": {
            "className": "org.joget.apps.form.lib.BeanShellFormBinder",
            "properties": {
                "autoHandleFiles": "",
                "autoHandleWorkflowVariable": "true",
                "cacheInterval": "",
                "script": "import org.joget.apps.form.model.FormRowSet;\r\nimport org.joget.apps.form.model.FormRow;\r\nimport org.bson.Document;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport javax.sql.DataSource;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport org.joget.commons.util.UuidGenerator;\r\nimport org.joget.apps.form.model.FormStoreBinder;\r\nimport org.joget.plugin.base.PluginManager;\r\nimport org.joget.apps.form.model.Element;\r\nimport org.joget.apps.form.model.FormData;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.bson.Document;\r\n\r\nimport org.apache.http.HttpResponse;\r\nimport org.apache.http.client.methods.HttpGet;\r\nimport org.apache.http.client.methods.HttpRequestBase;\r\nimport org.apache.http.impl.client.CloseableHttpClient;\r\nimport org.apache.http.impl.client.HttpClients;\r\nimport org.apache.http.HttpEntity;\r\nimport org.apache.http.util.EntityUtils;\r\nimport java.io.IOException;\r\nimport java.nio.charset.StandardCharsets;\r\nimport java.net.URLEncoder;\r\n\r\n\r\npublic String setTags(){\r\n    \r\n    String company_size=\"\";\r\n\r\n    if(!rows.get(0).getProperty(\"company_size\").equals(\"\"))\r\n    {\r\n        company_size=rows.get(0).getProperty(\"company_size\");\r\n        \r\n    }\r\n    return company_size;\r\n}\r\n\r\n// consume API\r\npublic String searchAPI(){\r\n    \r\n    String company_size=\"\";\r\n\r\n\r\n    if(!rows.get(0).getProperty(\"company_size\").equals(\"\"))\r\n    {\r\n        company_size=rows.get(0).getProperty(\"company_size\");\r\n      \r\n    }\r\n   \r\n    \r\n    \r\n    try{\r\n       \r\n        String jsonUrl = \"http://127.0.0.1:8000/companies/\"+company_size;\r\n        \r\n\r\n        LogUtil.info(jsonUrl,\"\");\r\n        \r\n        CloseableHttpClient client = null;\r\n        CloseableHttpClient client = HttpClients.createDefault();\r\n     \r\n        HttpRequestBase request = null;\r\n        request = new HttpGet(jsonUrl);\r\n    \r\n        HttpResponse response = client.execute(request);\r\n        int statusCode = response.getStatusLine().getStatusCode();\r\n        if(statusCode==200){\r\n        HttpEntity entity = response.getEntity();\r\n        // Read the contents of an entity and return it as a String.\r\n        String res = EntityUtils.toString(entity,StandardCharsets.UTF_8);\r\n        request.releaseConnection();\r\n        client.close();\r\n        return res;\r\n        }\r\n        else if(statusCode==400){\r\n            return \"filtersMandatory\";\r\n        }else{\r\n            return \"serverError\";\r\n      \r\n        }\r\n     \r\n    } catch (Exception ex) {\r\n            System.out.println(ex);\r\n    }\r\n    \r\n    return \"\";\r\n}\r\n\r\n\r\n\r\npublic FormRowSet store(Element element, FormRowSet rows, FormData formData) {\r\n     String tags=\"\";\r\n    //check the rows is not empty before store it\r\n    if (rows != null && !rows.isEmpty()) {\r\n        //Get the submitted data\r\n        FormRow row = rows.get(0);\r\n        String searchResult=searchAPI();\r\n        row.setProperty(\"result\", searchResult);\r\n        if(searchResult.contains(\"nb_results\")){\r\n            Document doc= Document.parse(searchResult);\r\n            row.setProperty(\"res\", Integer.toString(doc.getInteger(\"nb_results\")));\r\n        }\r\n        tags=setTags();\r\n        row.setProperty(\"tags\", tags);\r\n        LogUtil.info(\"-------------------------------------------------------->Tags: \"+searchResult,\"\");\r\n        //Reuse Workflow Form Binder to store data\r\n        PluginManager pluginManager = (PluginManager) AppUtil.getApplicationContext().getBean(\"pluginManager\");\r\n        FormStoreBinder binder = (FormStoreBinder) pluginManager.getPlugin(\"org.joget.apps.form.lib.WorkflowFormBinder\");\r\n        binder.store(element, rows, formData);\r\n    }\r\n     \r\n    return rows;\r\n}\r\n \r\n//call store method with injected variable\r\nreturn store(element, rows, formData);\r\n"
            }
        },
        "tableName": "test"
    }
}