{
    "className": "org.joget.apps.form.model.Form",
    "elements": [{
        "className": "org.joget.apps.form.model.Section",
        "elements": [
            {
                "className": "org.joget.apps.form.model.Column",
                "elements": [
                    {
                        "className": "org.joget.apps.form.lib.CustomHTML",
                        "properties": {
                            "autoPopulate": "",
                            "id": "field1",
                            "label": "",
                            "value": "<style>\r\n.navbar-hirevioo,.form-section-title{\r\n    display:none !important;\r\n}\r\n\r\n#section-actions{\r\n    display:none !important;\r\n}\r\n\r\n#section1{\r\n    background-color: white !important;\r\n    height:100vh;\r\n}\r\n\r\n#backHome{\r\n    width: auto;\r\n    background-color: #0E6BB2;\r\n    border-radius: 4px;\r\n    color: white;\r\n    margin-bottom: 15px;\r\n    border: 1px solid #0E6BB2;\r\n}\r\n\r\n#mainDiv {\r\n    /*margin: 0;*/\r\n    /*margin-top: 34%;*/\r\n    /*left: 25%;*/\r\n    position: relative;\r\n}\r\n\r\n#divImgForgotPassword img {\r\n    height: 560px;\r\n    /*margin-top: 12%;*/\r\n    /*left: 18%;*/\r\n    position: relative;\r\n}\r\n\r\n#secondDiv{\r\n    margin-top: 20px !important;\r\n    margin-bottom: 10px !important;\r\n}\r\nh1{\r\n    font-size:34px !important;\r\n}\r\nh4{\r\n    font-size:24px !important;\r\n    color:#7C8493 !important ;\r\n}\r\n.form-error-message{\r\n    display:block !important;\r\n    width: max-content;\r\n    /*background-color: red;*/\r\n    color: red;\r\n    text-align: center;\r\n    border-radius: 3px;\r\n    font-weight: bold !important;\r\n    height: 15px;\r\n    padding-top: 2px;\r\n}\r\n\r\n#resetpasswordverificationcode div#section1 {\r\n    display: flex;\r\n    justify-content: space-around !important;\r\n    align-items: center;\r\n}\r\n\r\n#resetpasswordverificationcode div#section1 .form-column {\r\n    margin-left: 10%;\r\n    margin-right: 10%;\r\n}\r\n\r\n\r\n#resetpasswordverificationcode div#section1 .form-column:nth-child(3) {\r\n    text-align: center;\r\n}\r\n\r\n\r\ndiv#Backbtn a {\r\n    font-size: 16px !important;\r\n    color: #614ac1;\r\n}\r\n\r\ndiv#Backbtn i {\r\n    font-size: 11px;\r\n    color: #614ac1;\r\n    margin-right: 5px;\r\n}\r\n\r\nh1.clashDisplay.template-color {\r\n    margin-top: 20px;\r\n}\r\n\r\n<\/style>\r\n\r\n<div id=\"Backbtn\">\r\n    <i class=\"fa fa-chevron-left\" aria-hidden=\"true\"><\/i>\r\n    <a href=\"landing_page\">Back<\/a>\r\n<\/div>\r\n\r\n<div id=\"mainDiv\">\r\n    <h1 class=\"clashDisplay template-color\">Reset account password<\/h1>\r\n    <div id=\"secondDiv\" class=\"color-gray-2 epilogue-medium pb-4 mt-4 mb-4\">\r\n        <h4>Please enter the verification code.<\/h4>\r\n    <\/div>\r\n<\/div>\r\n"
                        }
                    },
                    {
                        "className": "org.joget.apps.form.lib.TextField",
                        "properties": {
                            "id": "verification_code",
                            "label": "Verification code",
                            "maxlength": "8",
                            "placeholder": "Verification code",
                            "readonly": "",
                            "readonlyLabel": "",
                            "size": "",
                            "storeNumeric": "",
                            "style": "",
                            "validator": {
                                "className": "org.joget.apps.form.lib.BeanShellValidator",
                                "properties": {
                                    "decoration": "",
                                    "script": "import org.joget.apps.form.service.FormUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport org.joget.apps.form.model.Element;\r\nimport org.joget.apps.form.model.FormData;\r\nimport org.joget.apps.form.model.FormRow;\r\nimport org.joget.apps.form.model.FormRowSet;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.directory.model.service.DirectoryManager;\r\nimport org.joget.directory.model.User;\r\nimport org.joget.commons.util.StringUtil;\r\nimport org.joget.apps.form.model.Form;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.SQLException;\r\nimport javax.sql.DataSource;\r\nimport java.sql.ResultSet;\r\nimport java.util.*;\r\nimport java.text.*;\r\n\r\npublic String getGeneratedResetCode(String id){\r\n    Connection con = null;\r\n    String resetCode=\"\";\r\n    try {\r\n        // retrieve connection from the default datasource\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\"setupDataSource\");\r\n        con = ds.getConnection();\r\n        // execute SQL query\r\n        if(!con.isClosed()) {\r\n            PreparedStatement stmt = con.prepareStatement(\"SELECT c_reset_code FROM jwdb.app_fd_forgotpassword where id='\" + id + \"'\");\r\n            ResultSet rs = stmt.executeQuery();\r\n            \r\n            while (rs.next()) {\r\n                // if(!rs.getString(1)==null || !rs.getString(1).equals(\"\"))\r\n                    resetCode=rs.getString(1);                   \r\n            }\r\n        }                    \r\n    } catch (Exception e) {\r\n        LogUtil.error(\"app\", e, \"Error fetching resetCode\");\r\n    } finally {\r\n        try {\r\n            if(con != null) {\r\n                con.close();\r\n                System.out.println(\"----------------------------->resetCode \"+resetCode);\r\n                return resetCode;\r\n            }\r\n        } catch(SQLException e) {                \r\n        } \r\n    }\r\n}\r\n\r\npublic String getValidDate(String id){\r\n    Connection con = null;\r\n    String validUntil=\"\";\r\n    try {\r\n        // retrieve connection from the default datasource\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\"setupDataSource\");\r\n        con = ds.getConnection();\r\n        // execute SQL query\r\n        if(!con.isClosed()) {\r\n            PreparedStatement stmt = con.prepareStatement(\"SELECT c_valid_until FROM jwdb.app_fd_forgotpassword where id='\" + id + \"'\");\r\n            ResultSet rs = stmt.executeQuery();\r\n            \r\n            while (rs.next()) {\r\n                // if(!rs.getString(1)==null || !rs.getString(1).equals(\"\"))\r\n                    validUntil=rs.getString(1);                   \r\n            }\r\n        }                    \r\n    } catch (Exception e) {\r\n        LogUtil.error(\"app\", e, \"Error fetching validUntil\");\r\n    } finally {\r\n        try {\r\n            if(con != null) {\r\n                con.close();\r\n                System.out.println(\"----------------------------->validUntil \"+validUntil);\r\n                return validUntil;\r\n            }\r\n        } catch(SQLException e) {                \r\n        } \r\n    }\r\n}\r\n\r\npublic boolean validate(Element element,FormData formData,String [] values) {\r\n     \r\n \r\n    String fieldId = \"id\";\r\n    Form form = FormUtil.findRootForm(element);\r\n    Element idElement = FormUtil.findElement(fieldId, form, formData);\r\n    //get value of field 1\r\n    String[] idValue = FormUtil.getElementPropertyValues(idElement, formData);\r\n    System.out.println(\"#form.forgotpassword.email[{\"+idValue[0]+\"}]#\");\r\n    if (values[0].length()> 0) {\r\n        String resetCode=getGeneratedResetCode(idValue[0]);\r\n        String strValidUntil=getValidDate(idValue[0]);\r\n        DateFormat dateFormat = new SimpleDateFormat(\"yyyy-M-dd hh:mm:ss\");\r\n        Date validUntil = dateFormat.parse(strValidUntil);\r\n        \r\n        java.util.Date date = new java.util.Date();\r\n        String strDateNow=dateFormat.format(date);\r\n        Date dateNow = dateFormat.parse(strDateNow);\r\n        \r\n        if(resetCode.equals(values[0])){\r\n            //if(dateNow.compareTo(validUntil) > 0)\r\n            if(!dateNow.after(validUntil)){\r\n                // String id = FormUtil.getElementParameterName(element);\r\n                // formData.addFormError(id, \"Verification code expired \");\r\n                // return false;\r\n                return true;\r\n            }else{\r\n                //return true;\r\n                String id = FormUtil.getElementParameterName(element);\r\n                formData.addFormError(id, \"Verification code expired \");\r\n                return false;\r\n            }\r\n        }else{\r\n            String id = FormUtil.getElementParameterName(element);\r\n            formData.addFormError(id, \"Invalid verification code \");\r\n            return false;\r\n        }        \r\n    \r\n    }else{\r\n        String id = FormUtil.getElementParameterName(element);\r\n        formData.addFormError(id, \"Please enter your verification code \");\r\n        return false;\r\n    }\r\n  \r\n    \r\n}\r\n   \r\n//call\r\nreturn validate(element,formData,values);"
                                }
                            },
                            "value": "",
                            "workflowVariable": ""
                        }
                    },
                    {
                        "className": "org.joget.apps.form.lib.HiddenField",
                        "properties": {
                            "id": "id",
                            "useDefaultWhenEmpty": "",
                            "validator": {
                                "className": "",
                                "properties": {}
                            },
                            "value": "",
                            "workflowVariable": ""
                        }
                    },
                    {
                        "className": "org.joget.apps.form.lib.CustomHTML",
                        "properties": {
                            "autoPopulate": "",
                            "id": "field4",
                            "label": "",
                            "value": "<style>\r\n.navbar-hirevioo,.form-section-title{\r\n    display:none !important;\r\n}\r\n\r\n#section-actions{\r\n    display:none !important;\r\n}\r\n\r\n#section1{\r\n    background-color: white !important;\r\n    height:100vh;\r\n}\r\n\r\n#reset{\r\n    width: auto;\r\n    background-color: #614ac1 !important;\r\n    border-radius: 16px;\r\n    border: 1px solid #614ac1 !important;\r\n    color: white;\r\n}\r\n\r\n#Divbtn {\r\n    margin-top: 15px;\r\n    position: relative;\r\n}\r\n\r\n#resend{\r\n    width: auto;\r\n    background-color: transparent;\r\n    border-radius: 16px;\r\n    color: #614ac1 !important;\r\n    box-shadow: none;\r\n    text-decoration: underline;\r\n}\r\n\r\n#resetpasswordverificationcode input#verification_code {\r\n    width: 75%;\r\n}\r\n\r\n#resetpasswordverificationcode div#Divbtn {\r\n    width: 75%;\r\n    display: grid;\r\n}\r\n\r\nbutton#resend:hover {\r\n    border: none;\r\n}\r\n\r\n<\/style>\r\n\r\n<div id=\"Divbtn\">\r\n    <button type=\"button\" id=\"reset\" class=\"menu-block login-btn rounded-4 text-decoraiotn-none\" onclick=\"document.getElementById('submit').click();\">Submit<\/button>\r\n    <button type=\"button\" id=\"resend\" class=\"menu-block login-btn rounded-4 text-decoraiotn-none\" onclick=\"sendAgain()\">Send again ?<\/button>\r\n<\/div>\r\n\r\n\r\n\r\n<script>\r\n    function sendAgain(){\r\n        window.location.href = \"verification_code?id=\"+document.getElementById('id').value+\"&status=resend_code\";\r\n    }\r\n<\/script>\r\n"
                        }
                    }
                ],
                "properties": {"width": "49%"}
            },
            {
                "className": "org.joget.apps.form.model.Column",
                "elements": [{
                    "className": "org.joget.apps.form.lib.CustomHTML",
                    "properties": {
                        "autoPopulate": "",
                        "id": "field2",
                        "label": "",
                        "value": "<div id=\"divImgForgotPassword\">\r\n    <img src=\"#appResource.verification.svg#\">\r\n<\/div>"
                    }
                }],
                "properties": {"width": "49%"}
            }
        ],
        "properties": {
            "comment": "",
            "id": "section1",
            "join": "",
            "label": "",
            "loadBinder": {
                "className": "",
                "properties": {}
            },
            "permission": {
                "className": "",
                "properties": {}
            },
            "permissionReadonly": "",
            "readonly": "",
            "readonlyLabel": "",
            "regex": "",
            "reverse": "",
            "storeBinder": {
                "className": "",
                "properties": {}
            },
            "visibilityControl": "",
            "visibilityValue": ""
        }
    }],
    "properties": {
        "description": "",
        "id": "resetpasswordverificationcode",
        "loadBinder": {
            "className": "org.joget.apps.form.lib.BeanShellFormBinder",
            "properties": {
                "autoHandleFiles": "",
                "autoHandleWorkflowVariable": "true",
                "cacheInterval": "",
                "script": "import org.joget.apps.form.model.FormRowSet;\nimport org.joget.apps.form.model.FormRow;\nimport org.joget.apps.app.service.*;\nimport org.joget.apps.form.model.*;\nimport org.joget.apps.form.service.*;\nimport java.util.*;\nimport java.text.*;\nimport java.util.Set;\nimport org.joget.apps.app.service.AppUtil;\nimport org.joget.commons.util.SecurityUtil;\nimport org.joget.directory.dao.UserDao;\nimport org.joget.directory.dao.RoleDao;\nimport org.joget.directory.model.User;\nimport org.joget.directory.model.service.DirectoryUtil;\nimport org.joget.directory.model.service.UserSecurity;\nimport org.joget.apps.workflow.security.WorkflowUserDetails;\nimport org.joget.directory.model.service.DirectoryManager;\nimport org.joget.workflow.model.service.WorkflowUserManager;\nimport org.springframework.security.authentication.UsernamePasswordAuthenticationToken;\nimport org.springframework.security.core.Authentication;\nimport org.joget.workflow.util.WorkflowUtil;\nimport org.springframework.security.core.context.SecurityContextHolder;\nimport javax.servlet.http.HttpSession;\nimport javax.servlet.http.HttpServletRequest;\nimport org.springframework.security.web.savedrequest.HttpSessionRequestCache;\nimport org.springframework.security.web.savedrequest.SavedRequest;\nimport org.joget.commons.util.StringUtil;\nimport org.joget.commons.util.UuidGenerator;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport javax.sql.DataSource;\nimport java.sql.Date;\n\nimport java.lang.Exception;\nimport org.joget.commons.util.LogUtil;\n\nimport java.util.Properties;\nimport javax.mail.Flags;\nimport javax.mail.Folder;\nimport javax.mail.Message;\nimport javax.mail.MessagingException;\nimport javax.mail.NoSuchProviderException;\nimport javax.mail.Session;\nimport javax.mail.Store;\nimport javax.mail.search.FlagTerm;\n\nimport org.joget.apps.app.model.AppDefinition;\nimport org.joget.plugin.base.ApplicationPlugin;\nimport org.joget.plugin.base.Plugin;\nimport org.joget.plugin.base.PluginManager;\nimport org.joget.plugin.property.model.PropertyEditable;\nimport java.util.Collection;\nimport org.joget.apps.app.service.AppPluginUtil;\n\n\npublic void sendEmail(String usermail,String subject ,String body){\n    AppDefinition appDef = AppUtil.getCurrentAppDefinition();\n    PluginManager pluginManager = (PluginManager) AppUtil.getApplicationContext().getBean(\"pluginManager\");\n    //Reuse Email Tool to send separated email to a list of users;\n    Plugin plugin = pluginManager.getPlugin(\"org.joget.apps.app.lib.EmailTool\");\n        \n    //Get default properties (SMTP setting) for email tool\n    Map propertiesMap = AppPluginUtil.getDefaultProperties(plugin, null, appDef, null);\n    propertiesMap.put(\"pluginManager\", pluginManager);\n    propertiesMap.put(\"appDef\", appDef);\n    //propertiesMap.put(\"request\", request);\n        \n    ApplicationPlugin emailTool = (ApplicationPlugin) plugin;\n        \n    \n    propertiesMap.put(\"toSpecific\", usermail);\n    propertiesMap.put(\"subject\", subject);\n    propertiesMap.put(\"message\", body);\n    //set properties and execute the tool\n\n    \n    ((PropertyEditable) emailTool).setProperties(propertiesMap);\n    emailTool.execute(propertiesMap);\n    System.out.println(\"----------------------------->mail sent\");   \n\n\n}\n\npublic String resetCodeGeneration(){\n    int length=8;\n    String numbers = \"1234567890\";\n    Random random = new Random();\n    String code =\"\";\n        \n    for(int i = 0; i< length ; i++) {\n        code+= numbers.charAt(random.nextInt(numbers.length()));\n    }\n    return code;\n}\n\npublic String getRequestEmail(String id){\n    //Get Joget's current datasource configs\n    DataSource ds = (DataSource) AppUtil.getApplicationContext().getBean(\"setupDataSource\");\n    String result=\"\";\n    con = ds.getConnection();\n     \n    if (!con.isClosed()) {\n        //Get the URL parameter\n    \n        //Here you can query from one or multiple tables using JOIN etc\n        String sql = \"SELECT c_email FROM jwdb.app_fd_forgotpassword where id=?\";\n        PreparedStatement stmt = con.prepareStatement(sql);\n        stmt.setString(1, id);\n    \n        //Execute the SELECT SQL statement\n        ResultSet rs = stmt.executeQuery();\n             \n        //Get value from columns of record(s)\n        while (rs.next()) {\n            result=rs.getString(1);\n        }\n    }\n    con.close();\n    return result;\n}\n\npublic void updatResetCode(String code,String id){\n    //Get Joget's current datasource configs\n    DataSource ds = (DataSource) AppUtil.getApplicationContext().getBean(\"setupDataSource\");\n    DateFormat dateFormat = new SimpleDateFormat(\"yyyy-M-dd hh:mm:ss\");\n    java.util.Date date = new java.util.Date();\n    Calendar cal = Calendar.getInstance();\n    cal.setTime(date);\n    cal.add(Calendar.MINUTE, 30);\n    String dateValid=dateFormat.format(cal.getTime());\n    con = ds.getConnection();\n     \n    if (!con.isClosed()) {\n        //Get the URL parameter\n    \n        //Here you can query from one or multiple tables using JOIN etc\n        String sql = \"update jwdb.app_fd_forgotpassword set c_reset_code=?, c_verification_code='',c_valid_until=? where id=?\";\n        PreparedStatement stmt = con.prepareStatement(sql);\n        stmt.setString(1, code);\n        stmt.setString(2, dateValid);\n        stmt.setString(3, id);\n    \n        ///Execute SQL statement\n        stmt.executeUpdate();\n    }\n  \n    con.close();\n}\n\n\n\nString id=\"#requestParam.id#\";\nString status=\"#requestParam.status#\";\nif(status.equals(\"resend_code\")){\n    String resetCode=resetCodeGeneration();\n    updatResetCode(resetCode,id);\n    String email=getRequestEmail(id);\n    String userSubject=\"Reset account password\";\n    String userBody=\"Verification code: \"+resetCode;\n    sendEmail(email,userSubject ,userBody);\n}\n\n\n\nFormRowSet f = new FormRowSet();\nFormRow r1 = new FormRow();\nr1.put(\"id\", id);\nf.add(r1);\nreturn f;"
            }
        },
        "name": "Reset password Verification code",
        "noPermissionMessage": "",
        "permission": {
            "className": "",
            "properties": {}
        },
        "postProcessor": {
            "className": "",
            "properties": {}
        },
        "postProcessorRunOn": "create",
        "storeBinder": {
            "className": "org.joget.apps.form.lib.WorkflowFormBinder",
            "properties": {}
        },
        "tableName": "forgotpassword"
    }
}